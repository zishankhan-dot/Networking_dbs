name: Terraform Azure VM Deployment

on:
  push:
    branches:
      - main
  

jobs:
  terraform:
    runs-on: self-hosted 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set Working Directory
      run: |
          echo "Current directory:"
          pwd
          echo "Files in the current directory:"
          ls -l  

    - name: Change to Terraform Directory
      run: |
          echo "Changing directory to terraform"
          cd /mnt/c/Users/Dell/Documents/webDev/networking_dbs/actions-runner/_work/Networking_dbs/Networking_dbs/terraform
          echo "New directory:"
          pwd
          ls -l
    - name: Set Terraform Directory
      id: set-dir
      run: echo "TERRAFORM_DIR=/mnt/c/Users/Dell/Documents/webDev/networking_dbs/actions-runner/_work/Networking_dbs/Networking_dbs/terraform" >> $GITHUB_ENV
          
    - name: Restore Terraform State from Cache
      uses: actions/cache@v3
      with:
          path: ${{ env.TERRAFORM_DIR }}/terraform.tfstate
          key: terraform-state-${{ github.run_id }}
          restore-keys: terraform-state-

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Initialize Terraform
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}
    
    - name: Plan Terraform Deployment
      run: terraform plan -out=myplan.out
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Apply Terraform Configuration
      run: terraform apply -auto-approve 
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Save Terraform State to Cache
      uses: actions/cache@v3
      with:
        path: ${{ env.TERRAFORM_DIR }}/terraform.tfstate
        key: terraform-state-${{ github.run_id }}
        
    - name: Output Inventory File
      run: cat ../ansible/inventory.ini
      working-directory: ${{ env.TERRAFORM_DIR }}
      

    - name: Setup SSH Key
      run: |
           mkdir -p ~/.ssh
           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/ssh_key
           chmod 600 ~/.ssh/ssh_key

    - name: Disable SSH Host Key Checking
      run: |
        echo "Host *" > ~/.ssh/config
        echo "   StrictHostKeyChecking no" >> ~/.ssh/config
        echo "   UserKnownHostsFile=/dev/null" >> ~/.ssh/config
        
    - name: Install Ansible
      run: |
            sudo apt-get update
            sudo apt-get install -y ansible

    - name: Output Inventory File
      run: cat ../ansible/inventory.ini
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Verify SSH Key Setup
      run: ls -la ~/.ssh



    - name: Run Ansible Playbook
      run: |
        ansible-playbook -i inventory.ini playbook.yml
      working-directory: /mnt/c/Users/Dell/Documents/webDev/networking_dbs/actions-runner/_work/Networking_dbs/Networking_dbs/ansible
